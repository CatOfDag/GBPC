<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huse.mapper.CadreMapper" >
  <resultMap id="BaseResultMap" type="com.huse.pojo.Cadre" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cadre_name" property="cadreName" jdbcType="VARCHAR" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="CHAR" />
    <result column="avote_lias" property="avoteLias" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, cadre_name, job, state, `desc`, password, role, avote_lias
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from huse_cadre
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from huse_cadre
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.huse.pojo.Cadre" >
    insert into huse_cadre (id, cadre_name, job, 
      state, `desc`, password,
      role, avote_lias)
    values (#{id,jdbcType=INTEGER}, #{cadreName,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, 
      #{state,jdbcType=BIT}, #{desc,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{role,jdbcType=CHAR}, #{avoteLias,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huse.pojo.Cadre" >
    insert into huse_cadre
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cadreName != null" >
        cadre_name,
      </if>
      <if test="job != null" >
        job,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="desc != null" >
        `desc`,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="avoteLias != null" >
        avote_lias,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cadreName != null" >
        #{cadreName,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=CHAR},
      </if>
      <if test="avoteLias != null" >
        #{avoteLias,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huse.pojo.Cadre" >
    update huse_cadre
    <set >
      <if test="cadreName != null" >
        cadre_name = #{cadreName,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="desc != null" >
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=CHAR},
      </if>
      <if test="avoteLias != null" >
        avote_lias = #{avoteLias,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huse.pojo.Cadre" >
    update huse_cadre
    set cadre_name = #{cadreName,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT},
      `desc` = #{desc,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role = #{role,jdbcType=CHAR},
      avote_lias = #{avoteLias,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getCadreList" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    SELECT * from huse_cadre LIMIT #{start},#{number};
  </select>
  <select id="count" resultType="java.lang.Integer">
    SELECT count(*) from huse_cadre;
  </select>
  <select id="fuzzyQuery" resultMap="BaseResultMap">
        SELECT * from huse_cadre WHERE cadre_name LIKE '%${info}%'
   </select>
  <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM huse_cadre where cadre_name = #{name}
  </select>
  <select id="selectByAlias" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM huse_cadre where avote_lias = #{alias}
  </select>

</mapper>